pidfile.path = "/dev/null"
data.directory = "./data"
scheduled.task.enabled = true

play {
  server {
    http.port = 13000
    http.idleTimeout = 120s
    akka.requestTimeout = 120s
  }

  assets {
    path = "/public"
    urlPrefix = "/assets"
  }

  i18n {
    langs = ["en"]
    langCookieName = "hawkthorne_lang"
  }

  modules.enabled += "models.auth.AuthModule"

  http {
    secret.key = "sixseasonsandamovie"

    requestHandler = "util.web.RequestHandler"
    filters = "util.web.WebFilters"
    errorHandler = "util.web.ErrorHandler"

    parser.maxMemoryBuffer = 2M
    cookies.strict = true

    session.cookieName = "hawkthorne_session"
    flash.cookieName = "hawkthorne_flash"
  }

  akka {
    actor-system = "hawkthorne"
  }
}

akka {
  version = "2.5.16"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  log-dead-letters = on
  log-dead-letters-during-shutdown = off
  log-config-on-start = off
  jvm-exit-on-fatal-error = on

  actor {
    provider = "akka.actor.LocalActorRefProvider"
    # Enable this to visualize your actor conversations, then run [docker run -ti --rm -p 8080:8080 -p 60009:60009/udp ouven/akka-visual-mailbox-visualization].
    # default-mailbox.mailbox-type = "util.akka.VisualMailboxFilteredType"
  }

  debug {
    receive = off
    autoreceive = off
    lifecycle = off
    fsm = off
    event-stream = off
    unhandled = on
    router-misconfiguration = on
  }
}

context {
  web {
    fork-join-executor {
      parallelism-factor = 2.0
      parallelism-max = 32
    }
  }
  tracing {
    fork-join-executor {
      parallelism-factor = 2.0
      parallelism-max = 32
    }
  }
}

database {
  application {
    section = local

    local {
      username = "hawkthorne"
      password = "hawkthorne"
      host = "localhost"
      port = 5432
      database = "hawkthorne"
    }
  }
}

silhouette {
  authenticator {
    session {
      sessionKey = "auth"
      encryptAuthenticator = true
      useFingerprinting = false
      authenticatorIdleTimeout = 600
      authenticatorExpiry = 600
    }
    cookie {
      name = "hawkthorne_auth"
      path = "/"
      secure = false
      useFingerprinting = false
      maxAge = 31536000 # One year in seconds
      idleTimeout = 31536000 # One year in seconds
      expiry = 31536000 # One year in seconds
    }
    google {
      whitelistDomain = "hawkthorne.com"
      authorization = "https://accounts.google.com/o/oauth2/auth"
      accessToken = "https://accounts.google.com/o/oauth2/token"
      redirect = "http://localhost:9000/signin/google"
      clientId = ""
      clientId = ${?GOOGLE_CLIENT_ID}
      clientSecret=""
      clientSecret=${?GOOGLE_CLIENT_SECRET}
      scope="profile email"
    }
  }
}

notification {
  slack {
    enabled = false
    url = "https://hooks.slack.com/services/T0QMTEDE3/B1Q9K1DB4/???"
    channel = "#general"
    username = "Hawkthorne"
    iconUrl = ""
  }
}

metrics {
  micrometer {
    enabled = true
  }
  tracing {
    enabled = true
    server = "127.0.0.1"
    port = 5775
    sampleRate = 1.0
  }
}
