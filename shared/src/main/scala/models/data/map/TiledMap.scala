/* Generated File */
package models.data.map

import enumeratum.values.{StringCirceEnum, StringEnum, StringEnumEntry}

sealed abstract class TiledMap(override val value: String, val images: Seq[String], val layers: Seq[String]) extends StringEnumEntry

object TiledMap extends StringEnum[TiledMap] with StringCirceEnum[TiledMap] {
  case object AbedCastleInterior extends TiledMap(value = "abed-castle-interior", images = Seq(), layers = Seq(
    // ...
  ))
  case object AbedCave extends TiledMap(value = "abed-cave", images = Seq(), layers = Seq(
    // ...
  ))
  case object ACSchool extends TiledMap(value = "acschool", images = Seq(), layers = Seq(
    // ...
  ))
  case object AdminHallway extends TiledMap(value = "admin-hallway", images = Seq(), layers = Seq(
    // ...
  ))
  case object Baseball extends TiledMap(value = "baseball", images = Seq(), layers = Seq(
    // ...
  ))
  case object BlackCaverns2 extends TiledMap(value = "black-caverns-2", images = Seq(), layers = Seq(
    // ...
  ))
  case object BlackCaverns3 extends TiledMap(value = "black-caverns-3", images = Seq(), layers = Seq(
    // ...
  ))
  case object BlackCaverns extends TiledMap(value = "black-caverns", images = Seq(), layers = Seq(
    // ...
  ))
  case object BlacksmithUpstairs extends TiledMap(value = "blacksmith-upstairs", images = Seq(), layers = Seq(
    // ...
  ))
  case object Blacksmith extends TiledMap(value = "blacksmith", images = Seq(), layers = Seq(
    // ...
  ))
  case object BorchertHallway extends TiledMap(value = "borchert-hallway", images = Seq(), layers = Seq(
    // ...
  ))
  case object CastleHawkthorneEntrance extends TiledMap(value = "castle-hawkthorne-entrance", images = Seq(), layers = Seq(
    // ...
  ))
  case object CastleHawkthorneRoom1 extends TiledMap(value = "castle-hawkthorne-room-1", images = Seq(), layers = Seq(
    // ...
  ))
  case object CastleHawkthorneRoom2 extends TiledMap(value = "castle-hawkthorne-room-2", images = Seq(), layers = Seq(
    // ...
  ))
  case object CastleHawkthorneRoom3 extends TiledMap(value = "castle-hawkthorne-room-3", images = Seq(), layers = Seq(
    // ...
  ))
  case object CastleHawkthorneRoom4 extends TiledMap(value = "castle-hawkthorne-room-4", images = Seq(), layers = Seq(
    // ...
  ))
  case object CastleHawkthorneThrone extends TiledMap(value = "castle-hawkthorne-throne", images = Seq(), layers = Seq(
    // ...
  ))
  case object CastleHawkthorne extends TiledMap(value = "castle-hawkthorne", images = Seq(), layers = Seq(
    // ...
  ))
  case object ClassBasement extends TiledMap(value = "class-basement", images = Seq(), layers = Seq(
    // ...
  ))
  case object ClassHallway2 extends TiledMap(value = "class-hallway-2", images = Seq(), layers = Seq(
    // ...
  ))
  case object ClassHallway extends TiledMap(value = "class-hallway", images = Seq(), layers = Seq(
    // ...
  ))
  case object DeansCloset extends TiledMap(value = "deans-closet", images = Seq(), layers = Seq(
    // ...
  ))
  case object DeansCloset2 extends TiledMap(value = "deans-closet2", images = Seq(), layers = Seq(
    // ...
  ))
  case object DeansOffice2 extends TiledMap(value = "deans-office-2", images = Seq(), layers = Seq(
    // ...
  ))
  case object DeansOffice extends TiledMap(value = "deans-office", images = Seq(), layers = Seq(
    // ...
  ))
  case object DormLobby extends TiledMap(value = "dorm-lobby", images = Seq(), layers = Seq(
    // ...
  ))
  case object Forest2 extends TiledMap(value = "forest-2", images = Seq(), layers = Seq(
    // ...
  ))
  case object ForestHidden extends TiledMap(value = "forest-hidden", images = Seq(), layers = Seq(
    // ...
  ))
  case object Forest extends TiledMap(value = "forest", images = Seq(), layers = Seq(
    // ...
  ))
  case object FrozenCave2 extends TiledMap(value = "frozencave-2", images = Seq(), layers = Seq(
    // ...
  ))
  case object Frozencave3 extends TiledMap(value = "frozencave-3", images = Seq(), layers = Seq(
    // ...
  ))
  case object FrozenCave extends TiledMap(value = "frozencave", images = Seq(), layers = Seq(
    // ...
  ))
  case object GayIsland2 extends TiledMap(value = "gay-island-2", images = Seq(), layers = Seq(
    // ...
  ))
  case object GayIsland3 extends TiledMap(value = "gay-island-3", images = Seq(), layers = Seq(
    // ...
  ))
  case object GayIsland4 extends TiledMap(value = "gay-island-4", images = Seq(), layers = Seq(
    // ...
  ))
  case object GayIsland extends TiledMap(value = "gay-island", images = Seq(), layers = Seq(
    // ...
  ))
  case object GazetteOffice2 extends TiledMap(value = "gazette-office-2", images = Seq(), layers = Seq(
    // ...
  ))
  case object GazetteOffice extends TiledMap(value = "gazette-office", images = Seq(), layers = Seq(
    // ...
  ))
  case object GreendaleAnthropology extends TiledMap(value = "greendale-anthropology", images = Seq(), layers = Seq(
    // ...
  ))
  case object GreendaleBiology extends TiledMap(value = "greendale-biology", images = Seq(), layers = Seq(
    // ...
  ))
  case object GreendaleEnglishMemorial extends TiledMap(value = "greendale-englishmemorial", images = Seq(), layers = Seq(
    // ...
  ))
  case object GreendaleExterior extends TiledMap(value = "greendale-exterior", images = Seq(), layers = Seq(
    // ...
  ))
  case object GreendaleFry extends TiledMap(value = "greendale-fry", images = Seq(), layers = Seq(
    // ...
  ))
  case object GreendaleLadders extends TiledMap(value = "greendale-ladders", images = Seq(), layers = Seq(
    // ...
  ))
  case object GreendaleQuad extends TiledMap(value = "greendale-quad", images = Seq(), layers = Seq(
    // ...
  ))
  case object Hallway extends TiledMap(value = "hallway", images = Seq(), layers = Seq(
    // ...
  ))
  case object House extends TiledMap(value = "house", images = Seq(), layers = Seq(
    // ...
  ))
  case object Lab extends TiledMap(value = "lab", images = Seq(), layers = Seq(
    // ...
  ))
  case object MensBathroom extends TiledMap(value = "mens-bathroom", images = Seq(), layers = Seq(
    // ...
  ))
  case object NewAbedtown extends TiledMap(value = "new-abedtown", images = Seq(), layers = Seq(
    // ...
  ))
  case object ParkingLot extends TiledMap(value = "parking-lot", images = Seq(), layers = Seq(
    // ...
  ))
  case object PotteryClass extends TiledMap(value = "potteryclass", images = Seq(), layers = Seq(
    // ...
  ))
  case object RainbowBar extends TiledMap(value = "rainbow-bar", images = Seq(), layers = Seq(
    // ...
  ))
  case object RaveHallway extends TiledMap(value = "rave-hallway", images = Seq(), layers = Seq(
    // ...
  ))
  case object Seabluff extends TiledMap(value = "seabluff", images = Seq(), layers = Seq(
    // ...
  ))
  case object SecretWritersGarden extends TiledMap(value = "secretwritersgarden", images = Seq(), layers = Seq(
    // ...
  ))
  case object Sophieb extends TiledMap(value = "sophieb", images = Seq(), layers = Seq(
    // ...
  ))
  case object StudyRoom extends TiledMap(value = "studyroom", images = Seq(), layers = Seq(
    // ...
  ))
  case object Sunchamber extends TiledMap(value = "sunchamber", images = Seq(), layers = Seq(
    // ...
  ))
  case object Tavern extends TiledMap(value = "tavern", images = Seq(), layers = Seq(
    // ...
  ))
  case object TestLevel extends TiledMap(value = "test-level", images = Seq(), layers = Seq(
    // ...
  ))
  case object Town extends TiledMap(value = "town", images = Seq(), layers = Seq(
    // ...
  ))
  case object Trampoline extends TiledMap(value = "trampoline", images = Seq(), layers = Seq(
    // ...
  ))
  case object Treeline extends TiledMap(value = "treeline", images = Seq(), layers = Seq(
    // ...
  ))
  case object Upstairs extends TiledMap(value = "upstairs", images = Seq(), layers = Seq(
    // ...
  ))
  case object Valley2 extends TiledMap(value = "valley-2", images = Seq(), layers = Seq(
    // ...
  ))
  case object Valley3 extends TiledMap(value = "valley-3", images = Seq(), layers = Seq(
    // ...
  ))
  case object ValleyChiliFields2 extends TiledMap(value = "valley-chili-fields-2", images = Seq(), layers = Seq(
    // ...
  ))
  case object ValleyChiliFields extends TiledMap(value = "valley-chili-fields", images = Seq(), layers = Seq(
    // ...
  ))
  case object ValleyGoatCave extends TiledMap(value = "valley-goat-cave", images = Seq(), layers = Seq(
    // ...
  ))
  case object ValleyGoatFarm extends TiledMap(value = "valley-goat-farm", images = Seq(), layers = Seq(
    // ...
  ))
  case object ValleyHills2 extends TiledMap(value = "valley-hills-2", images = Seq(), layers = Seq(
    // ...
  ))
  case object ValleyHills extends TiledMap(value = "valley-hills", images = Seq(), layers = Seq(
    // ...
  ))
  case object ValleySandpits2 extends TiledMap(value = "valley-sandpits-2", images = Seq(), layers = Seq(
    // ...
  ))
  case object ValleySandpitsEntrance extends TiledMap(value = "valley-sandpits-entrance", images = Seq(), layers = Seq(
    // ...
  ))
  case object ValleySandpits extends TiledMap(value = "valley-sandpits", images = Seq(), layers = Seq(
    // ...
  ))
  case object ValleyTacotown extends TiledMap(value = "valley-tacotown", images = Seq(), layers = Seq(
    // ...
  ))
  case object Valley extends TiledMap(value = "valley", images = Seq(), layers = Seq(
    // ...
  ))
  case object Vents2 extends TiledMap(value = "vents-2", images = Seq(), layers = Seq(
    // ...
  ))
  case object Vents extends TiledMap(value = "vents", images = Seq(), layers = Seq(
    // ...
  ))
  case object VillageForest2 extends TiledMap(value = "village-forest-2", images = Seq(), layers = Seq(
    // ...
  ))
  case object VillageForest3 extends TiledMap(value = "village-forest-3", images = Seq(), layers = Seq(
    // ...
  ))
  case object VillageForest4 extends TiledMap(value = "village-forest-4", images = Seq(), layers = Seq(
    // ...
  ))
  case object VillageForestAcornpeak2 extends TiledMap(value = "village-forest-acornpeak-2", images = Seq(), layers = Seq(
    // ...
  ))
  case object VillageForestAcornpeak extends TiledMap(value = "village-forest-acornpeak", images = Seq(), layers = Seq(
    // ...
  ))
  case object VillageForestMines2 extends TiledMap(value = "village-forest-mines-2", images = Seq(), layers = Seq(
    // ...
  ))
  case object VillageForestMines3 extends TiledMap(value = "village-forest-mines-3", images = Seq(), layers = Seq(
    // ...
  ))
  case object VillageForestMinesEntrance extends TiledMap(value = "village-forest-mines-entrance", images = Seq(), layers = Seq(
    // ...
  ))
  case object VillageForestMinesReturn extends TiledMap(value = "village-forest-mines-return", images = Seq(), layers = Seq(
    // ...
  ))
  case object VillageForestMinesRoom extends TiledMap(value = "village-forest-mines-room", images = Seq(), layers = Seq(
    // ...
  ))
  case object VillageForestMinesStorageRoom extends TiledMap(value = "village-forest-mines-storage-room", images = Seq(), layers = Seq(
    // ...
  ))
  case object VillageForestMines extends TiledMap(value = "village-forest-mines", images = Seq(), layers = Seq(
    // ...
  ))
  case object VillageForestStonerspeak2 extends TiledMap(value = "village-forest-stonerspeak-2", images = Seq(), layers = Seq(
    // ...
  ))
  case object VillageForestStonerspeakReturn extends TiledMap(value = "village-forest-stonerspeak-return", images = Seq(), layers = Seq(
    // ...
  ))
  case object VillageForestStonerspeak extends TiledMap(value = "village-forest-stonerspeak", images = Seq(), layers = Seq(
    // ...
  ))
  case object VillageForest extends TiledMap(value = "village-forest", images = Seq(), layers = Seq(
    // ...
  ))
  case object VillageTreeline extends TiledMap(value = "village-treeline", images = Seq(), layers = Seq(
    // ...
  ))
  case object WinterWonderland extends TiledMap(value = "winterwonderland", images = Seq(), layers = Seq(
    // ...
  ))
  case object WinterWonderland2 extends TiledMap(value = "winterwonderland2", images = Seq(), layers = Seq(
    // ...
  ))
  case object WomensBathroom extends TiledMap(value = "womens-bathroom", images = Seq(), layers = Seq(
    // ...
  ))

  override val values = findValues
}
